<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="12" hostname="ArunMotoori" failures="1" tests="1" name="Default test" time="16.278" errors="0" timestamp="2024-01-11T18:32:49 IST">
  <testcase classname="registerpack.RegisterAccountTests" name="registerAccountMandatoryFieldsAsterickSymbolCheck" time="0.691">
    <failure type="java.lang.AssertionError" message="expected [true] but found [false]">
      <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at registerpack.RegisterAccountTests.registerAccountMandatoryFieldsAsterickSymbolCheck(RegisterAccountTests.java:685)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- registerAccountMandatoryFieldsAsterickSymbolCheck -->
  <testcase classname="registerpack.RegisterAccountTests" name="registerAccountUsingInvalidTelephoneNumber" time="0.0">
    <ignored/>
  </testcase> <!-- registerAccountUsingInvalidTelephoneNumber -->
  <testcase classname="registerpack.RegisterAccountTests" name="registerAccountWithAllFields" time="0.0">
    <ignored/>
  </testcase> <!-- registerAccountWithAllFields -->
  <testcase classname="registerpack.RegisterAccountTests" name="registerAccountPageNavigationsDifferentWays" time="0.0">
    <ignored/>
  </testcase> <!-- registerAccountPageNavigationsDifferentWays -->
  <testcase classname="registerpack.RegisterAccountTests" name="registerWithoutProvidingAnyFields" time="0.0">
    <ignored/>
  </testcase> <!-- registerWithoutProvidingAnyFields -->
  <testcase classname="registerpack.RegisterAccountTests" name="registerDuplicateAccountWithSameEmail" time="0.0">
    <ignored/>
  </testcase> <!-- registerDuplicateAccountWithSameEmail -->
  <testcase classname="registerpack.RegisterAccountTests" name="registerAccountBySelectingYesNewsletterOption" time="0.0">
    <ignored/>
  </testcase> <!-- registerAccountBySelectingYesNewsletterOption -->
  <testcase classname="registerpack.RegisterAccountTests" name="registerAccountUsingInvalidEmailAddress" time="0.0">
    <ignored/>
  </testcase> <!-- registerAccountUsingInvalidEmailAddress -->
  <testcase classname="registerpack.RegisterAccountTests" name="registerAccountWithMandatoryFields" time="0.0">
    <ignored/>
  </testcase> <!-- registerAccountWithMandatoryFields -->
  <testcase classname="registerpack.RegisterAccountTests" name="registerAccountByProvidingMismatchingPasswords" time="0.0">
    <ignored/>
  </testcase> <!-- registerAccountByProvidingMismatchingPasswords -->
  <testcase classname="registerpack.RegisterAccountTests" name="regiserAccountPlaceholdersChecking" time="0.0">
    <ignored/>
  </testcase> <!-- regiserAccountPlaceholdersChecking -->
  <testcase classname="registerpack.RegisterAccountTests" name="registerAccountBySelectingNoNewsletterOption" time="0.0">
    <ignored/>
  </testcase> <!-- registerAccountBySelectingNoNewsletterOption -->
  <testcase classname="registerpack.RegisterAccountTests" name="registerAccountUsingKeyboardKeys" time="0.0">
    <ignored/>
  </testcase> <!-- registerAccountUsingKeyboardKeys -->
</testsuite> <!-- Default test -->
